 # Generated by Django 5.2.7 on 2025-10-17 12:53

from django.db import migrations

def create_unique_brands(apps, schema_editor):
    ShoeModel = apps.get_model('main_app', 'Shoe')

    UniqueBrands =apps.get_model('main_app', 'UniqueBrand')

    #in SQL:select * from main_app_shoe
    #ShoeModel.objects.all()

    #not a good practice because if it's for big quantity it will tak ea lot of resourses
    # shoes = ShoeModel.objects.all()
    # unique_brands = set()
    # for shoe in shoes:
    #     unique_brands.add(shoe.brand)

    #in SQL:select distinct brand from main_app_shoe

    unique_brands = ShoeModel.objects.values_list('brand',flat=True).distinct() #give me only the column brand
    # for brand_name in unique_brands:
    #     UniqueBrands(brand=brand_name).save() #we use save to send it to the db, but will do as many sends as are the loops

    unique_brands_to_create = [UniqueBrands(brand=brand_name) for brand_name in unique_brands]
    #insert into main_app_unique_brands values(brand1,brand2)
    UniqueBrands.objects.bulk_create(unique_brands_to_create) #we do one insert in one update

def delete_unique_brands_data(apps, schema_editor): #when we want to go back
    UniqueBrands = apps.get_model('main_app', 'UniqueBrand')
    UniqueBrands.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0002_uniquebrand'),
    ]

    operations = [
        migrations.RunPython(create_unique_brands,reverse_code=delete_unique_brands_data),
    ]
